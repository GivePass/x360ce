using System;
using System.Collections.Generic;
using System.IO;
using System.Xml.Serialization;
using System.Xml;
using System.Text;
using System.ComponentModel;
using System.Windows.Forms;
using System.Linq;

namespace x360ce.App
{
	[Serializable]
	public class SettingsFile
	{

		/// <summary>
		/// Default settings generated by choosing most popular configuration.
		/// </summary>
		BindingList<x360ce.Engine.Data.Program> _Programs;
		/// <summary>
		/// Individual user settings.
		/// </summary>
		BindingList<x360ce.Engine.Data.Game> _Games;
		/// <summary>
		/// Pad Configuration.
		/// </summary>
		BindingList<x360ce.Engine.Data.PadSetting> _Pads;

		public SettingsFile()
		{
			_Games = new BindingList<x360ce.Engine.Data.Game>();
			_Programs = new BindingList<x360ce.Engine.Data.Program>();
			_Pads = new BindingList<x360ce.Engine.Data.PadSetting>();
		}

		static SettingsFile _current;
		public static SettingsFile Current
		{
			get { return _current = _current ?? new SettingsFile(); }
		}

		public BindingList<x360ce.Engine.Data.Game> Games { get { return _Games; } }
		public BindingList<x360ce.Engine.Data.Program> Programs { get { return _Programs; } }
		public BindingList<x360ce.Engine.Data.PadSetting> Pads { get { return _Pads; } }

		const string FileName = "x360ce.xml";

		public void Save()
		{
			Helper.SerializeToXmlFile(this, FileName, System.Text.Encoding.UTF8);
		}

		public void Load()
		{
			// If configuration file exists then...
			if (System.IO.File.Exists(FileName))
			{
				// Deserialize and load data.
				var data = (SettingsFile)Helper.DeserializeFromXmlFile(FileName, typeof(SettingsFile));
				if (data == null) return;
				//Programs.Clear();
				//if (data.Programs != null) for (int i = 0; i < data.Programs.Count; i++) Programs.Add(data.Programs[i]);
				Games.Clear();
				if (data.Games != null) for (int i = 0; i < data.Games.Count; i++) Games.Add(data.Games[i]);
				Pads.Clear();
				if (data.Pads != null) for (int i = 0; i < data.Pads.Count; i++) Pads.Add(data.Pads[i]);
			}
			// Check if current app doesn't exist in the list then...
			var currentFile = new System.IO.FileInfo(Application.ExecutablePath);
			var currentGame = Games.FirstOrDefault(x => x.FileName == currentFile.Name);
			if (currentGame == null)
			{
				// Add x360ce.exe
				var item = x360ce.Engine.Data.Game.FromDisk(currentFile.Name);
				var program = Programs.FirstOrDefault(x => x.FileName == currentFile.Name);
				item.LoadDefault(program);
				SettingsFile.Current.Games.Add(item);
			}
			else
			{
				currentGame.FullPath = currentFile.FullName;
			}
		}

	}
}
